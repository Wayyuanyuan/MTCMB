from make_answer.chat.chat_invoker import ChatInvoker


def tcm_litdata(prompt_type:int,data: dict, llm: ChatInvoker) -> dict:
    for question in data["annotations"]:
        zero_shot_prompt = (f'这是一段经典文献，其内容是{data["text"]}。\n'
                f'你只能摘取文献中的原文进行回答，每个回答只有1到2句话。{question["Q"]}')
        few_shot_prompt = f'''
            请理解给定经典文献，并回答问题。
            ##注意：你只能摘取文献中的原文进行回答，每个回答只有1到2句话。
            ##请参考下面的示例：
            文献内容：
            《灵枢·寒热》：五脏，身有五部：伏兔一；腓二，腓者腨也；背三，五脏之输四；项五。
            《针灸大成·卷之六》：主膝冷不得温，风劳痹逆，狂邪，手挛缩，身瘾疹，腹胀少气，头重，脚气，妇人八部诸疾。
            《针灸甲乙经·卷之三》：伏兔，在膝上六寸起肉间，足阳明脉气所发。刺入五分，禁不可灸。
            
            问题1： “五脏，身有五部：伏兔一；腓二，腓者腨也；背三，五脏之输四；项五。” 这句话出现在哪本医学巨著中？
            【回答】： 《灵枢·寒热》
            
            问题2： “主膝冷不得温，风劳痹逆，狂邪，手挛缩，身瘾疹，腹胀少气，头重，脚气，妇人八部诸疾。” 这句话出现在哪本医学巨著中？
            【回答】： 《针灸大成·卷之六》
            
            问题3： “伏兔，在膝上六寸起肉间，足阳明脉气所发。刺入五分，禁不可灸。” 这句话出现在哪本医学巨著中？
            【回答】： 《针灸甲乙经·卷之三》
            
            #文献内容是 ：{data["text"]}。请你参考以上示例，阅读文献内容并回答问题。只能摘取文献中的原文进行回答。问题是：{question["Q"]}
        '''
        cot_prompt = f'''
        请理解给定经典文献，并回答问题。
        ##注意：你只能摘取文献中的原文进行回答，每个回答只有1到2句话。
        ##请参考下面的示例：
        文献内容：
        《灵枢·寒热》：五脏，身有五部：伏兔一；腓二，腓者腨也；背三，五脏之输四；项五。
        《针灸大成·卷之六》：主膝冷不得温，风劳痹逆，狂邪，手挛缩，身瘾疹，腹胀少气，头重，脚气，妇人八部诸疾。
        《针灸甲乙经·卷之三》：伏兔，在膝上六寸起肉间，足阳明脉气所发。刺入五分，禁不可灸。
        
        问题1： “五脏，身有五部：伏兔一；腓二，腓者腨也；背三，五脏之输四；项五。” 这句话出现在哪本医学巨著中？
        【推理过程】： 查找原文中完全一致的句子，判断该句出自哪部著作。该句出现在第一句《灵枢·寒热》段落中。
        【回答】： 《灵枢·寒热》
        
        问题2： “主膝冷不得温，风劳痹逆，狂邪，手挛缩，身瘾疹，腹胀少气，头重，脚气，妇人八部诸疾。” 这句话出现在哪本医学巨著中？
        【推理过程】： 精确匹配这句话在原文中出现的位置，该句与《针灸大成·卷之六》段内容一致。
        【回答】： 《针灸大成·卷之六》
        
        问题3： “伏兔，在膝上六寸起肉间，足阳明脉气所发。刺入五分，禁不可灸。” 这句话出现在哪本医学巨著中？
        【推理过程】： 原文末尾明确给出“伏兔，在膝上六寸…”这段文字出现在《针灸甲乙经·卷之三》。
        【回答】： 《针灸甲乙经·卷之三》
        
        #文献内容是 :{data["text"]}。请你参考以上思考方式，只能摘取文献中的原文进行回答，每个回答只有1到2句话。问题是：{question["Q"]}
        '''
        match prompt_type:
            case 0:
                prompt = zero_shot_prompt
            case 1:
                prompt = few_shot_prompt
            case 2:
                prompt = cot_prompt
            case _:
                prompt = ""
        response = llm.chat(prompt)
        question["A"] = response

    return data
