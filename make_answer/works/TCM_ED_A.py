import re
from make_answer.chat.chat_invoker import ChatInvoker


def tcm_ed_a(prompt_type:int,data: dict, llm: ChatInvoker) -> dict:
    zero_shot_prompt = f'''以下是一道考题，有A、B、C、D、E五个备选答案，请从中选择一个最佳答案。
                #注意：输出只能在A、B、C、D、E五个答案选项中，选择一个最佳答案，不需要解释，禁止返回其他内容。
                题目：{data["question"]}。选项：{str(data["options"])}'''
    few_shot_prompt = f'''以下是一道考题，有A、B、C、D、E五个备选答案，请你选出最佳答案。
            ##注意：最终输出只能为A、B、C、D、E中的一个，不需要解释答案。
            ##请参考以下示例：
            #示例一：
            【题目】：与舌没有直接联系的脏是？  
            【选项】：A: 肝  B: 心  C: 脾  D: 肺  E: 肾  
            【答案】：D
            #示例二：
            【题目】：生产、销售劣药的，没收违法生产、销售的药品和违法所得，并处违法生产、销售药品货值金额  
            选项：A: 1倍以上3倍以下的罚款  B: 1倍以上5倍以下的罚款  C: 2倍以上3倍以下的罚款  D: 2倍以上5倍以下的罚款  E: 3倍以上5倍以下的罚款  
            【答案】：A
            #示例三：
            【题目】：患儿男性，4岁，因“发热4天，高热持续，头痛剧烈，呕吐频繁，颈背强直，烦躁谵语，四肢抽搐”来诊。患儿喉中痰鸣，唇干渴饮，溲赤便结，舌质红绛，苔黄厚，脉数有力，指纹紫滞。治疗应首选的方剂是  
            【选项】：A: 犀角地黄汤  B: 清瘟败毒饮  C: 羚角钩藤汤  D: 安宫牛黄丸  E: 镇肝熄风汤  
            【答案】：B
            #请你参考以上示例，回答下面问题，并从备选答案中选出最佳答案。题目：{data["question"]}。选项：{str(data["options"])}
'''

    cot_prompt = f'''
    以下是一道考题，有A、B、C、D、E五个备选答案，请你选出最佳答案。
    ##注意：最终输出只能为A、B、C、D、E中的一个，不需要解释答案。
    ##请参考以下示例及其推理过程：
    #示例一：
    【题目】：与舌没有直接联系的脏是？  
    【选项】：A: 肝  B: 心  C: 脾  D: 肺  E: 肾  
    【推理过程】：舌为心之苗，又与脾胃之气相关，肝藏血通于舌，肾主水也影响舌润。唯独肺主要在体表和呼吸系统，对舌的生理关联较小。  
    【答案】：D
    #示例二：
    【题目】：生产、销售劣药的，没收违法生产、销售的药品和违法所得，并处违法生产、销售药品货值金额  
    选项：A: 1倍以上3倍以下的罚款  B: 1倍以上5倍以下的罚款  C: 2倍以上3倍以下的罚款  D: 2倍以上5倍以下的罚款  E: 3倍以上5倍以下的罚款  
    【推理过程】：《药品管理法》规定，对生产、销售劣药的行为应加重处罚，不仅没收违法所得，还需按货值金额处以罚款。其中规定的罚款为1倍以上3倍以下，是最基本的惩处标准。  
    【答案】：A
    #示例三：
    【题目】：患儿男性，4岁，因“发热4天，高热持续，头痛剧烈，呕吐频繁，颈背强直，烦躁谵语，四肢抽搐”来诊。患儿喉中痰鸣，唇干渴饮，溲赤便结，舌质红绛，苔黄厚，脉数有力，指纹紫滞。治疗应首选的方剂是  
    【选项】：A: 犀角地黄汤  B: 清瘟败毒饮  C: 羚角钩藤汤  D: 安宫牛黄丸  E: 镇肝熄风汤  
    【推理过程】：该患儿症见高热持续，颈背强直，烦躁谵语，四肢抽搐，喉中痰鸣，呕吐频繁，故辨病为急惊风；患儿头痛剧烈，唇干渴饮，溲赤便结，舌质红绛，苔黄厚，脉数有力，指纹紫滞，故辨证为气营两燔证。治宜清气凉营，息风开窍，首选清瘟败毒饮。 
    【答案】：B
    #请你参考以上思考方式，选出最佳答案。题目：{data["question"]}。选项：{str(data["options"])}'''

    match prompt_type:
        case 0:
            prompt = zero_shot_prompt
        case 1:
            prompt=few_shot_prompt
        case 2:
            prompt = cot_prompt
        case _:
            prompt = ""

    response = llm.chat(prompt)
    # 直接匹配 A、B、C、D、E 五个选项（不区分大小写）
    extract_choice = re.compile(r".*?([A-Ea-e]).*", re.DOTALL)

    # 从 response 中提取第一个匹配的选项字母（转为大写）
    match = extract_choice.match(response)
    data["answer"] = match.group(1).upper() if match else ""

    return data